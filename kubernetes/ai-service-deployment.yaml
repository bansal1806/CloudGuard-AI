# CloudGuard AI Python ML Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudguard-ai-service
  namespace: cloudguard-ai
  labels:
    app: cloudguard-ai-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudguard-ai-service
  template:
    metadata:
      labels:
        app: cloudguard-ai-service
        tier: backend
    spec:
      containers:
      - name: ai-service
        image: cloudguard-ai/ai-service:latest
        ports:
        - containerPort: 8001
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: cloudguard-secrets
              key: database-url
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: INFLUXDB_URL
          value: "http://influxdb-service:8086"
        - name: INFLUXDB_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudguard-secrets
              key: influxdb-token
        - name: INFLUXDB_ORG
          value: "cloudguard"
        - name: INFLUXDB_BUCKET
          value: "cloudguard"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
            nvidia.com/gpu: 0
          limits:
            memory: "2Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: cloudguard-ai
  labels:
    app: cloudguard-ai-service
spec:
  selector:
    app: cloudguard-ai-service
  ports:
  - protocol: TCP
    port: 8001
    targetPort: 8001
  type: ClusterIP
