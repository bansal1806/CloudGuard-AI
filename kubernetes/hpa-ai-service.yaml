# Horizontal Pod Autoscaler for AI Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudguard-ai-service-hpa
  namespace: cloudguard-ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudguard-ai-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: nvidia.com/gpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: ml_inference_queue_length
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 120  # Longer for AI workloads
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 600  # Very conservative for AI models
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
      selectPolicy: Min

---
# Vertical Pod Autoscaler for AI Service (GPU optimization)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: cloudguard-ai-service-vpa
  namespace: cloudguard-ai
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudguard-ai-service
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: ai-service
      maxAllowed:
        cpu: 4000m
        memory: 8Gi
        nvidia.com/gpu: 2
      minAllowed:
        cpu: 500m
        memory: 512Mi
        nvidia.com/gpu: 0
